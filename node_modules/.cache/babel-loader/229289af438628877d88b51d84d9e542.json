{"ast":null,"code":"import WebHeader from \"./WebHeader.vue\";\nimport WebFooter from \"./WebFooter.vue\";\nimport { ref, onMounted, watch } from \"vue\";\nimport { useRoute } from \"vue-router\"; // import api from \"@/api.js\";\n\nimport axios from \"axios\"; // import {getAuth, onAuthStateChanged} from 'firebase/auth'\n\nexport default {\n  name: \"MovieDetail\",\n  components: {\n    WebHeader,\n    WebFooter\n  },\n\n  setup() {\n    const name = ref();\n    const favourite = ref();\n    const movie = ref({});\n    const video = ref({});\n    const countries = ref();\n    const companies = ref();\n    const genres = ref([]);\n    const actors = ref([]);\n    const similars = ref([]);\n    const keywords = ref();\n    const isAdmin = ref(false);\n    const route = useRoute();\n    const id = ref();\n    const checkedAdd = ref(1); // let auth;\n    // const post = onMounted(() => {\n    //   fetch(\n    //     \"https://movies-projects-default-rtdb.asia-southeast1.firebasedatabase.app/user.json\",\n    //     {\n    //       method: \"POST\",\n    //       headers: {\n    //         \"Content-type\": \"application/json\",\n    //       },\n    //       body: JSON.stringify({\n    //         name: name.value,\n    //         favourite: favourite.value,\n    //       }),\n    //     }\n    //   );\n    // });\n    // onMounted(() => {\n    //   auth = getAuth();\n    //   onAuthStateChanged(auth, (user) => {\n    //     if (user) {\n    //       if (user.email === \"admin@gmail.com\") {\n    //         isAdmin.value = true;\n    //       }\n    //     } else {\n    //       return;\n    //     }\n    //   });\n    // });\n\n    const detail = onMounted(() => {\n      axios.get(`http://localhost:8081/movie/details/${route.params.id}`).then(data => {\n        id.value = data.data.id;\n        movie.value = data.data;\n        actors.value = data.data.actors;\n        countries.value = data.data.countries.map(item => {\n          return item.countryName;\n        }).join(\", \");\n        companies.value = data.data.companies.map(item => {\n          return item.companyName;\n        }).join(\", \");\n        genres.value = data.data.genre;\n        keywords.value = data.data.keywords.map(item => {\n          return item.name;\n        }).join(\", \");\n      });\n    });\n\n    const addMovie = async () => {\n      await axios.post(`http://localhost:8081/user/add/${id.value}`).then(() => {\n        checkedAdd.value = 3;\n      }).catch(() => {\n        checkedAdd.value = 1;\n      });\n    };\n\n    const getLink = () => {\n      return \"https://www.2embed.ru/embed/imdb/movie?id=\" + route.params.id;\n    }; // onMounted(() => {\n    //   axios\n    //     .get(\n    //       `https://imdb-api.com/en/API/Trailer/${api.apikey3}/${route.params.id}`\n    //     )\n    //     .then((data) => {\n    //       video.value = data.data;\n    //     });\n    // });\n    // const actor = onMounted(() => {\n    //   axios\n    //     .get(\n    //       `https://imdb-api.com/en/API/Title/${api.apikey3}/${route.params.id}`\n    //     )\n    //     .then((data) => {\n    //       actors.value = data.data.actorList;\n    //     });\n    // });\n\n\n    const similiars = onMounted(() => {\n      axios.get(`http://localhost:8081/movie/keywords/${route.params.id}`).then(data => {\n        similars.value = data.data;\n      });\n    });\n    watch(route, () => {\n      similiars(); // actor();\n\n      detail();\n    });\n    return {\n      name,\n      checkedAdd,\n      favourite,\n      movie,\n      getLink,\n      video,\n      actors,\n      similars,\n      isAdmin,\n      countries,\n      companies,\n      keywords,\n      genres,\n      addMovie\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["WebHeader","WebFooter","ref","onMounted","watch","useRoute","axios","name","components","setup","favourite","movie","video","countries","companies","genres","actors","similars","keywords","isAdmin","route","id","checkedAdd","detail","get","params","then","data","value","map","item","countryName","join","companyName","genre","addMovie","post","catch","getLink","similiars"],"sourceRoot":"","sources":["D:\\Java\\movie-website-project-1\\src\\components\\MovieDetail.vue"],"sourcesContent":["<template>\r\n  <WebHeader />\r\n  <div class=\"movie-detail\">\r\n    <div class=\"video\">\r\n      <iframe\r\n        title=\"movie.title\"\r\n        :src=\"getLink()\"\r\n        allowfullscreen\r\n        allow=\"autoplay\"\r\n        frameborder=\"0\"\r\n      ></iframe>\r\n      <!-- <iframe v-else-if=\"!getLink()\" src=\"video.linkEmbed\" frameborder=\"0\"></iframe> -->\r\n      <!-- <img v-else :src=\"movie.image\" alt=\"\" /> -->\r\n    </div>\r\n    <div class=\"content\">\r\n      <h2>{{ movie.title }}</h2>\r\n      <p>\r\n        <strong><i>Released: </i></strong>{{ movie.releaseDate }}\r\n      </p>\r\n      <p>\r\n        <strong><i>Country: </i></strong>{{ countries }}\r\n      </p>\r\n      <p>\r\n        <strong\r\n          >Genre:\r\n          <ul v-for=\"genre in genres\" :key=\"genre.id\">\r\n            <li>{{ genre.genreName }}</li>\r\n          </ul></strong\r\n        >\r\n      </p>\r\n      <p>\r\n        <strong><i>Companies Production: </i></strong>\r\n        {{ companies }}\r\n      </p>\r\n      <p>\r\n        <strong><i>Runtime: </i></strong> {{ movie.runtime }}\r\n      </p>\r\n      <div>\r\n        <button @click.prevent=\"addMovie()\">\r\n          <svg\r\n            v-if=\"checkedAdd === 2\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            fill=\"currentColor\"\r\n            class=\"bi bi-heart\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path\r\n              d=\"m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\"\r\n            />\r\n          </svg>\r\n\r\n          Favourite\r\n        </button>\r\n        <button id=\"btnDel\" v-if=\"isAdmin\">Delete Film</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <form v-if=\"isAdmin\" action=\"\">\r\n    <input type=\"text\" v-model=\"name\" />\r\n    <input type=\"text\" v-model=\"favourite\" />\r\n    <button @click.prevent=\"post()\">Submit</button>\r\n  </form>\r\n  <p>\r\n    <strong><i>Keywords: </i></strong>\r\n    {{ keywords }}\r\n  </p>\r\n  <p class=\"plot\">\r\n    <strong> <i>Plot: </i> </strong>{{ movie.overview }}\r\n  </p>\r\n  <h2>DIỄN VIÊN</h2>\r\n  <div class=\"actor-list\">\r\n    <div class=\"actor-item\" v-for=\"actor in actors\" :key=\"actor.id\">\r\n      <div class=\"actorImg\">\r\n        <img :src=\"actor.profilePath\" alt=\"\" />\r\n      </div>\r\n      <div class=\"actorInfo\">\r\n        <p>\r\n          <strong>{{ actor.name }}</strong>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <h2>PHIM LIÊN QUAN</h2>\r\n  <div class=\"similar-list\">\r\n    <div class=\"similar-item\" v-for=\"similar in similars\" :key=\"similar.idAPI\">\r\n      <router-link :to=\"'/movie/' + similar.idAPI\" class=\"similar-link\">\r\n        <div class=\"poster\">\r\n          <img :src=\"similar.posterPath\" alt=\"\" />\r\n        </div>\r\n        <div class=\"similarInfo\">\r\n          <p class=\"title\">\r\n            <strong>{{ similar.title }}</strong>\r\n          </p>\r\n        </div>\r\n      </router-link>\r\n    </div>\r\n  </div>\r\n  <WebFooter />\r\n</template>\r\n\r\n<script>\r\nimport WebHeader from \"./WebHeader.vue\";\r\nimport WebFooter from \"./WebFooter.vue\";\r\nimport { ref, onMounted, watch } from \"vue\";\r\nimport { useRoute } from \"vue-router\";\r\n// import api from \"@/api.js\";\r\nimport axios from \"axios\";\r\n// import {getAuth, onAuthStateChanged} from 'firebase/auth'\r\nexport default {\r\n  name: \"MovieDetail\",\r\n  components: { WebHeader, WebFooter },\r\n  setup() {\r\n    const name = ref();\r\n    const favourite = ref();\r\n    const movie = ref({});\r\n    const video = ref({});\r\n    const countries = ref();\r\n    const companies = ref();\r\n    const genres = ref([]);\r\n    const actors = ref([]);\r\n    const similars = ref([]);\r\n    const keywords = ref();\r\n    const isAdmin = ref(false);\r\n    const route = useRoute();\r\n    const id = ref();\r\n    const checkedAdd = ref(1);\r\n    // let auth;\r\n    // const post = onMounted(() => {\r\n    //   fetch(\r\n    //     \"https://movies-projects-default-rtdb.asia-southeast1.firebasedatabase.app/user.json\",\r\n    //     {\r\n    //       method: \"POST\",\r\n    //       headers: {\r\n    //         \"Content-type\": \"application/json\",\r\n    //       },\r\n    //       body: JSON.stringify({\r\n    //         name: name.value,\r\n    //         favourite: favourite.value,\r\n    //       }),\r\n    //     }\r\n    //   );\r\n    // });\r\n    // onMounted(() => {\r\n    //   auth = getAuth();\r\n    //   onAuthStateChanged(auth, (user) => {\r\n    //     if (user) {\r\n    //       if (user.email === \"admin@gmail.com\") {\r\n    //         isAdmin.value = true;\r\n    //       }\r\n    //     } else {\r\n    //       return;\r\n    //     }\r\n    //   });\r\n    // });\r\n\r\n    const detail = onMounted(() => {\r\n      axios\r\n        .get(`http://localhost:8081/movie/details/${route.params.id}`)\r\n        .then((data) => {\r\n          id.value = data.data.id;\r\n          movie.value = data.data;\r\n          actors.value = data.data.actors;\r\n          countries.value = data.data.countries\r\n            .map((item) => {\r\n              return item.countryName;\r\n            })\r\n            .join(\", \");\r\n          companies.value = data.data.companies\r\n            .map((item) => {\r\n              return item.companyName;\r\n            })\r\n            .join(\", \");\r\n          genres.value = data.data.genre;\r\n          keywords.value = data.data.keywords\r\n            .map((item) => {\r\n              return item.name;\r\n            })\r\n            .join(\", \");\r\n        });\r\n    });\r\n\r\n    const addMovie = async () => {\r\n      await axios\r\n        .post(`http://localhost:8081/user/add/${id.value}`)\r\n        .then(() => {\r\n          checkedAdd.value = 3;\r\n        })\r\n        .catch(() => {\r\n          checkedAdd.value = 1;\r\n        });\r\n    };\r\n\r\n    const getLink = () => {\r\n      return \"https://www.2embed.ru/embed/imdb/movie?id=\" + route.params.id;\r\n    };\r\n    // onMounted(() => {\r\n    //   axios\r\n    //     .get(\r\n    //       `https://imdb-api.com/en/API/Trailer/${api.apikey3}/${route.params.id}`\r\n    //     )\r\n    //     .then((data) => {\r\n    //       video.value = data.data;\r\n    //     });\r\n    // });\r\n    // const actor = onMounted(() => {\r\n    //   axios\r\n    //     .get(\r\n    //       `https://imdb-api.com/en/API/Title/${api.apikey3}/${route.params.id}`\r\n    //     )\r\n    //     .then((data) => {\r\n    //       actors.value = data.data.actorList;\r\n    //     });\r\n    // });\r\n    const similiars = onMounted(() => {\r\n      axios\r\n        .get(`http://localhost:8081/movie/keywords/${route.params.id}`)\r\n        .then((data) => {\r\n          similars.value = data.data;\r\n        });\r\n    });\r\n    watch(route, () => {\r\n      similiars();\r\n      // actor();\r\n      detail();\r\n    });\r\n    return {\r\n      name,\r\n      checkedAdd,\r\n      favourite,\r\n      movie,\r\n      getLink,\r\n      video,\r\n      actors,\r\n      similars,\r\n      isAdmin,\r\n      countries,\r\n      companies,\r\n      keywords,\r\n      genres,\r\n      addMovie,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.success {\r\n  background-color: palevioletred;\r\n}\r\nli {\r\n  color: black;\r\n  text-decoration: none;\r\n}\r\n.movie-detail {\r\n  display: flex;\r\n  /* justify-content: center; */\r\n  /* align-items: center; */\r\n  height: 550px;\r\n  padding-right: 20px;\r\n  margin-bottom: 20px;\r\n  margin-top: 100px;\r\n  background: linear-gradient(\r\n    to bottom right,\r\n    rgb(184, 39, 39),\r\n    rgb(228, 214, 227)\r\n  );\r\n}\r\niframe {\r\n  width: 755px;\r\n  height: 550px;\r\n  margin-right: 50px;\r\n}\r\n.content p {\r\n  font-weight: 500;\r\n}\r\n.content {\r\n  margin-top: -40px;\r\n  text-shadow: 2px 2px 10px gray;\r\n}\r\n.actor-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n.actor-item {\r\n  margin: 7px;\r\n}\r\n.actorImg > img {\r\n  width: 305px;\r\n  height: 400px;\r\n  border-radius: 5px;\r\n}\r\nh2 {\r\n  margin-bottom: 30px;\r\n  margin-top: 100px;\r\n}\r\n.similar-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n.similar-item {\r\n  margin: 3px;\r\n}\r\n.poster > img {\r\n  width: 250px;\r\n  height: 380px;\r\n}\r\n.similarInfo {\r\n  width: 250px;\r\n}\r\n.similar-link {\r\n  text-decoration: none;\r\n  color: #000;\r\n}\r\n.title {\r\n  color: red;\r\n}\r\n.content strong {\r\n  color: rgb(7, 35, 161);\r\n}\r\n.content button {\r\n  margin-top: 20px;\r\n  border: 0.5px solid rgb(51, 47, 47);\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  background-color: rgb(212, 159, 60);\r\n  color: black;\r\n}\r\nsvg {\r\n  margin-right: 5px;\r\n}\r\n#btnDel {\r\n  margin-left: 10px;\r\n}\r\n/* .plot {\r\n  font-size: 10px;\r\n} */\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}