{"ast":null,"code":"import { getStorage, ref as stRef, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { getDatabase, ref as dbRef, push, set } from \"firebase/database\";\nimport { onMounted, reactive } from \"vue\";\nimport { getAuth, onAuthStateChanged, updateProfile } from \"firebase/auth\";\nexport default {\n  setup() {\n    const userInfo = reactive({\n      email: \"\",\n      userName: \"\",\n      userID: \"\",\n      dayCreate: \"\",\n      lastDaySignIn: \"\",\n      userImg: \"\"\n    }); // UPLOAD FILE AND GET URL FROM STORAGE\n\n    const storage = getStorage();\n    const database = getDatabase();\n    const databaseRef = dbRef(database);\n\n    async function onchangeFile(event) {\n      const file = event.target.files[0];\n\n      if (file) {\n        const fileRef = stRef(storage, file.name); //UPLOAD FILE\n\n        uploadBytes(fileRef, file).then(data => {\n          console.log(data);\n          const newFile = push(databaseRef);\n          set(newFile, {\n            name: file.name\n          });\n        }); //DOWNLOAD FILE\n\n        getDownloadURL(fileRef).then(url => {\n          console.log(url);\n          updateProfile(getAuth().currentUser, {\n            photoURL: url\n          });\n        });\n      }\n    } // NEU DANG NHAP THANH CONG LAY THONG TIN VE TAI KHOAN\n\n\n    let auth;\n    onMounted(() => {\n      auth = getAuth();\n      onAuthStateChanged(auth, user => {\n        if (user) {\n          userInfo.email = user.email;\n          userInfo.userName = user.displayName;\n          userInfo.userID = user.uid;\n          userInfo.dayCreate = user.metadata.creationTime;\n          userInfo.lastDaySignIn = user.metadata.lastSignInTime;\n          userInfo.userImg = user.photoURL;\n        } else {\n          return;\n        }\n      });\n    });\n    return {\n      userInfo,\n      onchangeFile // onclickBtn\n\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAyCA,SACEA,UADF,EAEEC,GAAE,IAAKC,KAFT,EAGEC,WAHF,EAIEC,cAJF,QAKO,kBALP;AAMA,SAASC,WAAT,EAAsBJ,GAAE,IAAKK,KAA7B,EAAoCC,IAApC,EAA0CC,GAA1C,QAAqD,mBAArD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,KAApC;AACA,SAASC,OAAT,EAAkBC,kBAAlB,EAAsCC,aAAtC,QAA2D,eAA3D;AACA,eAAe;AACbC,OAAK,GAAG;AACN,UAAMC,QAAO,GAAIL,QAAQ,CAAC;AACxBM,WAAK,EAAE,EADiB;AAExBC,cAAQ,EAAE,EAFc;AAGxBC,YAAM,EAAE,EAHgB;AAIxBC,eAAS,EAAE,EAJa;AAKxBC,mBAAa,EAAE,EALS;AAMxBC,aAAO,EAAE;AANe,KAAD,CAAzB,CADM,CAUN;;AACA,UAAMC,OAAM,GAAItB,UAAU,EAA1B;AACA,UAAMuB,QAAO,GAAIlB,WAAW,EAA5B;AACA,UAAMmB,WAAU,GAAIlB,KAAK,CAACiB,QAAD,CAAzB;;AAEA,mBAAeE,YAAf,CAA4BC,KAA5B,EAAmC;AACjC,YAAMC,IAAG,GAAID,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;;AACA,UAAIF,IAAJ,EAAU;AACR,cAAMG,OAAM,GAAI5B,KAAK,CAACoB,OAAD,EAAUK,IAAI,CAACI,IAAf,CAArB,CADQ,CAER;;AACA5B,mBAAW,CAAC2B,OAAD,EAAUH,IAAV,CAAX,CAA2BK,IAA3B,CAAiCC,IAAD,IAAU;AACxCC,iBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,gBAAMG,OAAM,GAAI7B,IAAI,CAACiB,WAAD,CAApB;AACAhB,aAAG,CAAC4B,OAAD,EAAU;AACXL,gBAAI,EAAEJ,IAAI,CAACI;AADA,WAAV,CAAH;AAGD,SAND,EAHQ,CAWR;;AACA3B,sBAAc,CAAC0B,OAAD,CAAd,CAAwBE,IAAxB,CAA8BK,GAAD,IAAS;AACpCH,iBAAO,CAACC,GAAR,CAAYE,GAAZ;AACAxB,uBAAa,CAACF,OAAO,GAAG2B,WAAX,EAAwB;AAAEC,oBAAQ,EAAEF;AAAZ,WAAxB,CAAb;AACD,SAHD;AAIF;AACF,KAlCM,CAoCN;;;AACA,QAAIG,IAAJ;AACA/B,aAAS,CAAC,MAAM;AACd+B,UAAG,GAAI7B,OAAO,EAAd;AACAC,wBAAkB,CAAC4B,IAAD,EAAQC,IAAD,IAAU;AACjC,YAAIA,IAAJ,EAAU;AACR1B,kBAAQ,CAACC,KAAT,GAAiByB,IAAI,CAACzB,KAAtB;AACAD,kBAAQ,CAACE,QAAT,GAAoBwB,IAAI,CAACC,WAAzB;AACA3B,kBAAQ,CAACG,MAAT,GAAkBuB,IAAI,CAACE,GAAvB;AACA5B,kBAAQ,CAACI,SAAT,GAAqBsB,IAAI,CAACG,QAAL,CAAcC,YAAnC;AACA9B,kBAAQ,CAACK,aAAT,GAAyBqB,IAAI,CAACG,QAAL,CAAcE,cAAvC;AACA/B,kBAAQ,CAACM,OAAT,GAAmBoB,IAAI,CAACF,QAAxB;AACF,SAPA,MAOO;AACL;AACF;AACD,OAXiB,CAAlB;AAYD,KAdQ,CAAT;AAeA,WAAO;AACLxB,cADK;AAELU,kBAFK,CAGL;;AAHK,KAAP;AAKD;;AA3DY,CAAf","names":["getStorage","ref","stRef","uploadBytes","getDownloadURL","getDatabase","dbRef","push","set","onMounted","reactive","getAuth","onAuthStateChanged","updateProfile","setup","userInfo","email","userName","userID","dayCreate","lastDaySignIn","userImg","storage","database","databaseRef","onchangeFile","event","file","target","files","fileRef","name","then","data","console","log","newFile","url","currentUser","photoURL","auth","user","displayName","uid","metadata","creationTime","lastSignInTime"],"sourceRoot":"","sources":["D:\\Java\\movie-website-project-1\\src\\components\\UserProfile.vue"],"sourcesContent":["<template>\r\n  <h1>THÔNG TIN TÀI KHOẢN</h1>\r\n  <div>\r\n    <article id=\"one\">\r\n      <img :src=\"userInfo.userImg\" alt=\"\" />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <h3>\r\n        <i style=\"color: blue\"\r\n          >Thay đổi ảnh đại diện <br /><span\r\n            >Hệ thống đang cải thiện, vui lòng <strong>(chọn ảnh và tải lại trang)</strong> 2 lần để có ảnh\r\n            </span\r\n          ></i\r\n        >\r\n      </h3>\r\n      <div class=\"component-item\">\r\n        <input\r\n          type=\"file\"\r\n          name=\"\"\r\n          id=\"imgSrc\"\r\n          accept=\"image/*\"\r\n          placeholder=\"Ảnh đại diện\"\r\n          @change=\"onchangeFile\"\r\n        />\r\n      </div>\r\n      <!-- <button @click=\"onclickBtn\"></button> -->\r\n    </article>\r\n    <article id=\"two\">\r\n      <p><strong>Tên đăng nhập: </strong> {{ userInfo.userName }}</p>\r\n      <p><strong>Địa chỉ Email: </strong>{{ userInfo.email }}</p>\r\n      <p><strong>ID nhận dạng: </strong> {{ userInfo.userID }}</p>\r\n      <p><strong>Ngày tạo: </strong> {{ userInfo.dayCreate }}</p>\r\n      <p>\r\n        <strong>Lần đăng nhập gần nhất: </strong> {{ userInfo.lastDaySignIn }}\r\n      </p>\r\n    </article>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getStorage,\r\n  ref as stRef,\r\n  uploadBytes,\r\n  getDownloadURL,\r\n} from \"firebase/storage\";\r\nimport { getDatabase, ref as dbRef, push, set } from \"firebase/database\";\r\nimport { onMounted, reactive } from \"vue\";\r\nimport { getAuth, onAuthStateChanged, updateProfile } from \"firebase/auth\";\r\nexport default {\r\n  setup() {\r\n    const userInfo = reactive({\r\n      email: \"\",\r\n      userName: \"\",\r\n      userID: \"\",\r\n      dayCreate: \"\",\r\n      lastDaySignIn: \"\",\r\n      userImg: \"\",\r\n    });\r\n\r\n    // UPLOAD FILE AND GET URL FROM STORAGE\r\n    const storage = getStorage();\r\n    const database = getDatabase();\r\n    const databaseRef = dbRef(database);\r\n\r\n    async function onchangeFile(event) {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        const fileRef = stRef(storage, file.name);\r\n        //UPLOAD FILE\r\n        uploadBytes(fileRef, file).then((data) => {\r\n          console.log(data);\r\n          const newFile = push(databaseRef);\r\n          set(newFile, {\r\n            name: file.name,\r\n          });\r\n        });\r\n\r\n        //DOWNLOAD FILE\r\n        getDownloadURL(fileRef).then((url) => {\r\n          console.log(url);\r\n          updateProfile(getAuth().currentUser, { photoURL: url });\r\n        });\r\n      }\r\n    }\r\n\r\n    // NEU DANG NHAP THANH CONG LAY THONG TIN VE TAI KHOAN\r\n    let auth;\r\n    onMounted(() => {\r\n      auth = getAuth();\r\n      onAuthStateChanged(auth, (user) => {\r\n        if (user) {\r\n          userInfo.email = user.email;\r\n          userInfo.userName = user.displayName;\r\n          userInfo.userID = user.uid;\r\n          userInfo.dayCreate = user.metadata.creationTime;\r\n          userInfo.lastDaySignIn = user.metadata.lastSignInTime;\r\n          userInfo.userImg = user.photoURL;\r\n        } else {\r\n          return;\r\n        }\r\n      });\r\n    });\r\n    return {\r\n      userInfo,\r\n      onchangeFile,\r\n      // onclickBtn\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh1 {\r\n  text-align: center;\r\n}\r\ndiv {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 30px;\r\n}\r\narticle {\r\n  margin-left: 30px;\r\n}\r\nspan {\r\n  font-size: 12px;\r\n  color: black;\r\n}\r\n#one {\r\n  width: 300px;\r\n}\r\nstrong {\r\n  text-decoration: underline;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}